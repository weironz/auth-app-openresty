worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # 缓存区：存 token 状态
    lua_shared_dict auth_cache 10m;

    server {
        listen 8080;   # 对外服务端口
        server_name localhost;

        root /usr/local/openresty/nginx/html;

        # 内部转发到 Flask 的鉴权接口
        location /authen {
            internal;
            proxy_pass http://auth:5000/authen;
            #proxy_pass http://192.168.73.11:5000/authen;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Auth-Id $http_x_auth_id;
        }


        # 业务接口（受保护）
        location / {
            access_by_lua_block {
                local cache = ngx.shared.auth_cache
                local token = ngx.req.get_headers()["X-Auth-Id"]

                if not token then
                    return ngx.exit(401)
                end

                -- 先查缓存
                local status = cache:get(token)
                if status then
                    if status == "allowed" then
                        return  -- 放行
                    else
                        return ngx.exit(403)
                    end
                end

                -- 缓存没有，调用 Flask
                local res = ngx.location.capture("/authen")
                if res.status == 200 then
                    -- 默认缓存 10s
                    cache:set(token, "allowed", 10)
                    return
                else
                    cache:set(token, "denied", 10)
                    return ngx.exit(403)
                end
            }


            try_files $uri $uri/ =404;
        }
    }
}
